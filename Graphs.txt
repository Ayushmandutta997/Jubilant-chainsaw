------BFS------
ll n,e;
  i2(n,e);
  vvi adj(n);
  lop(e)
  {
   ll u,v;
   i2(u,v);
   adj[u].pb(v);
   adj[v].pb(u);
  }
  queue<ll>q;
  vector<ll>vis(n,0);
  q.push(0);
  while(!q.empty())
  {
   int node=q.front();
   q.pop();
   if(!vis[node])
   {
   cout<<node<<nl;
   vis[node]=1;
   }
   vector<int>:: iterator it; 
   for(it=adj[node].begin();it<=adj[node].end();it++)
   {
    if(!vis[*it]) 
    q.push(*it);
   }
  }
-----------DFS--------------
vi vis;
vvi adj;
void dfs(ll i);
int main()
{
  ll b;
  i1(b);
  adj=vvi(100);
  lop(b)
  {
   ll u,v;
   i2(u,v);
   adj[u].pb(v);
  }
  vis=vi(100,0);
  dfs(adj[0][0]);
  return 0;
}
void dfs(ll i)
{
  vis[i]=1;
  cout<<i<<" ";
  for(auto j:adj[i])
  {
   if(!vis[j])  
   dfs(j);
  }
}
------------------------
Connected Components for t test cases

void connected(int i,vi &v)
{
 v[i]=1; 
 for(auto x:adj[i])
 {
  if(v[x]!=1)
  {
   connected(x,v);
  }
 }
 return;
}
int main()
{
  flash;
  int t=0;
  cin>>t;
  while(t--)
  {
    int n,m,c=0;
    cin>>n>>m;
    adj=vvi(n+1);
    lop(m)
    {
     ei(x);
     ei(y); 
     adj[x].pb(y);
     adj[y].pb(x);
    } 
    vi a(n+1,0);
    loop(1,n)
    {
     if(a[i]==0)
     {
     connected(i,a);
     c++;
     }
    }
    o1(c);
  }
  return 0;
}
-----------------------------------------
